name: GHCR Workflow

on:
  - push

env:
    CONTAINER_REGISTRY: ghcr.io
    IMAGE_NAME: test-app2
    TAG: latest
    GitHub_User: getdzidon

permissions:
    id-token: write
    contents: write
    packages: write

jobs: 
  docker_build: 
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

# Pushing to GitHub Container Registry (GHCR)
    - name: GHCR Login
      uses: docker/login-action@v2.2.0
      with:
        registry: ${{ env.CONTAINER_REGISTRY }}
        username: ${{ github.actor }}  
        password: ${{ secrets.GITHUB_TOKEN }}  

    - name: Publish code to GHCR
      run: |
        docker build -t ${{ env.CONTAINER_REGISTRY }}/${{ env.GitHub_User }}/${{ env.IMAGE_NAME }}:${{ env.TAG }} . 
        docker push ${{ env.CONTAINER_REGISTRY }}/${{ env.GitHub_User }}/${{ env.IMAGE_NAME }}:${{ env.TAG }} 


  # ✅ NEW JOB: Ensure Slack Messages Are Not Merged
  notify_slack:
    runs-on: ubuntu-latest
    needs: docker_build
    if: always()
    steps:
      - name: Send Slack Notification
        run: |
          timestamp=$(date +%s)  # 🕒 Unique timestamp to force separate messages
          if [ "${{ job.status }}" == "success" ]; then
            curl -X POST -H 'Content-type: application/json' --data '{
              "text": "✅ *GHCR Workflow Completed Successfully!* 🎉\n🚀 *Repository:* `${{ github.repository }}`\n🔗 *Commit:* <${{ github.event.head_commit.url }}|View Commit>\n📦 *Image:* `${{ env.CONTAINER_REGISTRY }}/${{ env.GitHub_User }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}`\n\nTimestamp: '"$timestamp"'"
            }' ${{ secrets.SLACK_WEBHOOK_URL }}
          else
            curl -X POST -H 'Content-type: application/json' --data '{
              "text": "❌ *GHCR Workflow Failed!* 🚨\n💥 *Repository:* `${{ github.repository }}`\n🔗 *Commit:* <${{ github.event.head_commit.url }}|View Commit>\n⚠️ Please check the logs for details.\n\nTimestamp: '"$timestamp"'"
            }' ${{ secrets.SLACK_WEBHOOK_URL }}